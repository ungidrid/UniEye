// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniEye.Modules.Students.Infrastructure;

#nullable disable

namespace UniEye.Modules.Students.Infrastructure.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20230325115757_MoveNameToOwnedProperty")]
    partial class MoveNameToOwnedProperty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudyFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyFormId");

                    b.ToTable("Group", "students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ПМІ-11",
                            StudyFormId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "ПМІ-12",
                            StudyFormId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "ПМІ-13",
                            StudyFormId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "ПМІ-14",
                            StudyFormId = 1
                        });
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.PaymentTerm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTerm", "students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BUDGET",
                            Name = "Бюджет"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CONTRACT",
                            Name = "Контракт"
                        });
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<Guid>("IdentityGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentTermId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("PaymentTermId");

                    b.ToTable("Student", "students");
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.StudyForm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudyForm", "students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FULL_TIME",
                            Name = "Денна"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EXTERNAL",
                            Name = "Заочна"
                        });
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.Group", b =>
                {
                    b.HasOne("UniEye.Modules.Students.Core.Models.StudyForm", "StudyForm")
                        .WithMany()
                        .HasForeignKey("StudyFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyForm");
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.Student", b =>
                {
                    b.HasOne("UniEye.Modules.Students.Core.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniEye.Modules.Students.Core.Models.PaymentTerm", "PaymentTerm")
                        .WithMany()
                        .HasForeignKey("PaymentTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UniEye.Shared.Domain.Domain.Name", "Name", b1 =>
                        {
                            b1.Property<int>("StudentId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("StudentId");

                            b1.ToTable("Student", "students");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.Navigation("Group");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("PaymentTerm");
                });

            modelBuilder.Entity("UniEye.Modules.Students.Core.Models.Group", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
